First install the model files 

#pip install opencv
#pip install numpy

import numpy as np
import cv2
from cv2 import dnn

# Model file paths
proto_file = r'C:\Users\Janhavi\Downloads\Model\colorization_deploy_v2.prototxt'
model_file = r'C:\Users\Janhavi\Downloads\Model\colorization_release_v2.caffemodel'
hull_pts = r'C:\Users\Janhavi\Downloads\Model\pts_in_hull.npy'
img_path = r'C:\Users\Janhavi\Downloads\flower.jfif'

img = cv2.imread(img_path)
if img is None:
    print(f"Error: Unable to load image at {img_path}")
    exit()

scaled = img.astype("float32") / 255.0
lab_img = cv2.cvtColor(scaled, cv2.COLOR_BGR2LAB)

net = dnn.readNetFromCaffe(proto_file, model_file)
kernel = np.load(hull_pts)
class8 = net.getLayerId("class8_ab")
conv8 = net.getLayerId("conv8_313_rh")
pts = kernel.transpose().reshape(2, 313, 1, 1)
net.getLayer(class8).blobs = [pts.astype("float32")]
net.getLayer(conv8).blobs = [np.full([1, 313], 2.606, dtype="float32")]

resized = cv2.resize(lab_img, (224, 224))
L = cv2.split(resized)[0]
L -= 50
net.setInput(cv2.dnn.blobFromImage(L))
ab_channel = net.forward()[0, :, :, :].transpose((1, 2, 0))
ab_channel = cv2.resize(ab_channel, (img.shape[1], img.shape[0]))

# Convert to colorized image in BGR
L = cv2.split(lab_img)[0]
colorized = cv2.cvtColor(np.concatenate((L[:, :, np.newaxis], ab_channel), axis=2), cv2.COLOR_LAB2BGR)
colorized = np.clip((255 * colorized).astype("uint8"), 0, 255)

# Resize images for display
img_display = cv2.resize(img, (640, 640))
colorized_display = cv2.resize(colorized, (640, 640))

# Concatenate and display images
result = np.hstack([img_display, colorized_display])
cv2.imshow("Grayscale -> Colour", result)
cv2.waitKey(0)
cv2.destroyAllWindows()
